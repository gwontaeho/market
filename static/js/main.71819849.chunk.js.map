{"version":3,"sources":["features/auth/index.js","features/menu/index.js","components/header/styles.js","components/header/index.jsx","components/footer/styles.js","components/footer/index.jsx","components/menu/styles.js","components/menu/index.jsx","axios/index.js","features/loading/index.js","pages/main/styles.js","image/alt.png","pages/main/index.jsx","pages/product/styles.js","pages/product/index.jsx","pages/signup/styles.js","pages/signup/index.jsx","pages/login/styles.js","pages/login/index.jsx","pages/user/styles.js","pages/user/index.jsx","pages/profile/styles.js","pages/profile/index.jsx","pages/write/styles.js","pages/write/index.jsx","pages/update/styles.js","pages/update/index.jsx","pages/search/styles.js","pages/search/index.jsx","pages/sale/styles.js","pages/sale/index.jsx","pages/purchase/styles.js","pages/purchase/index.jsx","pages/wish/styles.js","pages/wish/index.jsx","pages/users/index.jsx","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["authSlice","createSlice","name","initialState","loggedIn","id","token","reducers","login","state","action","payload","logout","actions","menuSlice","open","close","Container","styled","header","HeaderContainer","div","Logo","Search","Controls","Header","auth","useSelector","loading","dispatch","useDispatch","navigate","useNavigate","useState","keyword","setKeyword","onKeyUp","useCallback","e","keyCode","to","TextField","variant","onChange","target","value","placeholder","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","color","size","fontSize","ButtonGroup","Button","current","Box","sx","width","LinearProgress","footer","Footer","StyledList","List","Menu","menu","Drawer","anchor","onClose","ListItem","button","ListItemIcon","ListItemText","primary","Divider","axiosInstance","axios","create","baseURL","process","loadingSlice","start","end","main","Title","Item","Main","popularProduct","newProduct","products","setProducts","show","setShow","fetch","setFetch","useEffect","getProduct","window","addEventListener","handleResize","removeEventListener","debounce","innerWidth","a","get","response","status","data","console","log","popularList","map","product","src","JSON","parse","img","length","alt","onError","className","Number","price","toLocaleString","address","wishes","comments","newList","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","autoplay","autoplaySpeed","settings2","StyledModal","Modal","Article","article","SoldTag","Img","section","Wish","Text","Seller","Comment","CommentItem","Question","Answer","Product","params","useParams","setOpen","setProduct","imgs","setImgs","wish","setWish","comment","setComment","setComments","users","setUsers","buyer","setBuyer","forEach","user","nickname","undefined","find","v","push","isWish","filter","userId","replace","postWish","alert","post","productId","headers","postComment","putComment","parentNode","answer","getElementsByTagName","put","style","display","putProduct","onClickReply","nextSibling","imglist","commentList","userProfileImg","sellerProfileImg","createdAt","substr","updatedAt","userList","Radio","checked","disabled","Favorite","FavoriteBorder","intro","Contents","Signup","idRegExp","passwordRegExp","nicknameRegExp","setId","idCheck","setIdCheck","idCheckResult","setIdCheckResult","password","setPassword","passwordCheck","setPasswordCheck","setNickname","nicknameCheck","setNicknameCheck","nicknameCheckResult","setNicknameCheckResult","onChangeId","onChangeNickname","checkId","test","checkNickname","postUser","label","error","helperText","type","Inputs","Login","getUser","onKeyDown","code","Info","Profile","User","setUser","count","setCount","page","setPage","pages","setPages","rows","Math","ceil","productList","Pagination","setImg","setSrc","deleteImg","setDeleteImg","newPassword","setNewPassword","newPasswordCheck","setNewPasswordCheck","putNickname","putPassword","putImg","URL","revokeObjectURL","formData","FormData","append","onClickUpload","document","getElementById","click","files","createObjectURL","accept","Icons","Buttons","Write","priceRegExp","setName","setPrice","setAddress","setIntro","handleComplete","sido","sigungu","bname","postProduct","i","Array","from","top","left","transform","onComplete","fontWeight","htmlFor","AddPhotoAlternateOutlined","multiple","SettingsBackupRestoreOutlined","startAdornment","readOnly","Update","updateImg","setUpdateImg","originalImgs","setOriginalImgs","originalImgList","imgList","location","useLocation","getProducts","Sale","setState","unanswered","Purchase","page2","setPage2","pages2","setPages2","uncertain","setUncertain","getProduct2","boolean","uncertainList","setWishes","getWish","list","Users","getUsers","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","border","scope","sale","sold","purchase","App","index","element","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","authReducer","menuReducer","loadingReducer","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","store","theme","createTheme","palette","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.71819849.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    loggedIn: false,\r\n    id: \"\",\r\n    token: \"\",\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.loggedIn = true;\r\n      state.id = action.payload.id;\r\n      state.token = action.payload.token;\r\n    },\r\n    logout: (state) => {\r\n      state.loggedIn = false;\r\n      state.id = \"\";\r\n      state.token = \"\";\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { login, logout } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const menuSlice = createSlice({\r\n  name: \"menu\",\r\n  initialState: {\r\n    open: false,\r\n  },\r\n  reducers: {\r\n    open: (state) => {\r\n      state.open = true;\r\n    },\r\n    close: (state) => {\r\n      state.open = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { open, close } = menuSlice.actions;\r\n\r\nexport default menuSlice.reducer;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.header`\r\n  width: 100%;\r\n  height: 100px;\r\n  z-index: 2;\r\n  background-color: white;\r\n  position: sticky;\r\n  top: 0;\r\n  border-bottom: 1px solid #eee;\r\n`;\r\nexport const HeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Logo = styled.div`\r\n  width: 300px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  a {\r\n    font-size: 2rem;\r\n    color: #1976d2;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const Search = styled.div`\r\n  width: 500px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Controls = styled.div`\r\n  width: 300px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import { useCallback, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\n\r\nimport { open } from \"../../features/menu\";\r\nimport { Container, HeaderContainer, Logo, Search, Controls } from \"./styles\";\r\n\r\nconst Header = () => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const loading = useSelector((state) => state.loading);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const onKeyUp = useCallback(\r\n    (e) => {\r\n      if (e.keyCode === 13) navigate(\"/search\", { state: keyword });\r\n    },\r\n    [keyword]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <HeaderContainer>\r\n        <Logo>\r\n          <Link to=\"/\">MARKET</Link>\r\n        </Logo>\r\n        <Search>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            onKeyUp={onKeyUp}\r\n            placeholder=\"ex) 가산동, 의자, 가산동 의자\"\r\n            fullWidth\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={() => navigate(\"/search\", { state: keyword })}\r\n                    color=\"primary\"\r\n                  >\r\n                    <SearchIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Search>\r\n        <Controls>\r\n          {auth.loggedIn ? (\r\n            <IconButton\r\n              onClick={() => dispatch(open())}\r\n              color=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              <MenuIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          ) : (\r\n            <ButtonGroup>\r\n              <Button\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() => navigate(\"/login\")}\r\n              >\r\n                로그인\r\n              </Button>\r\n              <Button\r\n                size=\"large\"\r\n                variant=\"text\"\r\n                onClick={() => navigate(\"/signup\")}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </ButtonGroup>\r\n          )}\r\n        </Controls>\r\n      </HeaderContainer>\r\n      {loading.current && (\r\n        <Box sx={{ width: \"100%\" }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.footer`\r\n  width: 100%;\r\n  height: 200px;\r\n  background-color: #eee;\r\n`;\r\n","import { Container } from \"./styles\";\r\n\r\nconst Footer = () => {\r\n  return <Container></Container>;\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"@emotion/styled\";\r\nimport List from \"@mui/material/List\";\r\n\r\nexport const StyledList = styled(List)`\r\n  width: 400px;\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport PersonOutlineOutlinedIcon from \"@mui/icons-material/PersonOutlineOutlined\";\r\nimport ListOutlinedIcon from \"@mui/icons-material/ListOutlined\";\r\nimport CreateOutlinedIcon from \"@mui/icons-material/CreateOutlined\";\r\nimport LogoutOutlinedIcon from \"@mui/icons-material/LogoutOutlined\";\r\nimport { logout } from \"../../features/auth\";\r\nimport { close } from \"../../features/menu\";\r\nimport { StyledList } from \"./styles\";\r\n\r\nconst Menu = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const auth = useSelector((state) => state.auth);\r\n  const menu = useSelector((state) => state.menu);\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={menu.open} onClose={() => dispatch(close())}>\r\n      <StyledList>\r\n        {auth.id === \"admin\" ? (\r\n          <>\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                navigate(`/users`);\r\n                dispatch(close());\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <PersonOutlineOutlinedIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"유저 목록\" />\r\n            </ListItem>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                navigate(`/user/${auth.id}`);\r\n                dispatch(close());\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <PersonOutlineOutlinedIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"내 정보\" />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                navigate(`/sale`);\r\n                dispatch(close());\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <ListOutlinedIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"판매 내역\" />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                navigate(`/purchase`);\r\n                dispatch(close());\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <ListOutlinedIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"구매 내역\" />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                navigate(`/wish`);\r\n                dispatch(close());\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <ListOutlinedIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"관심 목록\" color=\"primary\" />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                navigate(`/write`);\r\n                dispatch(close());\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <CreateOutlinedIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"글 쓰기\" />\r\n            </ListItem>\r\n          </>\r\n        )}\r\n\r\n        <Divider />\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            dispatch(logout());\r\n            navigate(`/`);\r\n            dispatch(close());\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <LogoutOutlinedIcon color=\"primary\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"로그아웃\" />\r\n        </ListItem>\r\n      </StyledList>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_HOST,\r\n});\r\n\r\nexport default axiosInstance;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const loadingSlice = createSlice({\r\n  name: \"loading\",\r\n  initialState: {\r\n    current: false,\r\n  },\r\n  reducers: {\r\n    start: (state) => {\r\n      state.current = true;\r\n    },\r\n    end: (state) => {\r\n      state.current = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { start, end } = loadingSlice.actions;\r\n\r\nexport default loadingSlice.reducer;\r\n","import styled from \"@emotion/styled\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nexport const Container = styled.main`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  padding: 50px 0;\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  padding: 50px;\r\n  box-sizing: border-box;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 300px;\r\n    object-fit: cover;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    :hover {\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n\r\n  .name {\r\n    font-size: 1.2rem;\r\n    padding: 10px 0;\r\n    font-weight: bold;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  .price {\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    color: #3f51b5;\r\n  }\r\n\r\n  .info {\r\n    color: gray;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/alt.3ae7e71f.png\";","import { useState, useCallback, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Slider from \"react-slick\";\r\nimport { debounce } from \"lodash\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { start, end } from \"../../features/loading\";\r\nimport { Container, Title, Item } from \"./styles\";\r\nimport alt from \"../../image/alt.png\";\r\n\r\nconst Main = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [products, setProducts] = useState({\r\n    popularProduct: [],\r\n    newProduct: [],\r\n  });\r\n  const [show, setShow] = useState(3);\r\n  const [fetch, setFetch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProduct();\r\n    setFetch(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const handleResize = debounce(() => {\r\n    if (window.innerWidth > 1024) setShow(3);\r\n    if (window.innerWidth >= 768 && window.innerWidth < 1024) setShow(2);\r\n    if (window.innerWidth < 768) setShow(1);\r\n  }, 500);\r\n\r\n  const getProduct = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.get(\"/api/product\");\r\n      if (response.status === 200) setProducts(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, []);\r\n\r\n  const popularList = products.popularProduct.map((product) => {\r\n    const src =\r\n      JSON.parse(product.img).length === 0 || !product.img\r\n        ? alt\r\n        : JSON.parse(product.img)[0];\r\n    return (\r\n      <Item key={product.id}>\r\n        <img\r\n          src={src}\r\n          alt={product.name}\r\n          onError={(e) => (e.target.src = alt)}\r\n          onClick={() => navigate(`/product/${product.id}`)}\r\n        />\r\n        <div className=\"name\">{product.name}</div>\r\n        <div className=\"price\">{Number(product.price).toLocaleString()}원</div>\r\n        <div>{product.address}</div>\r\n        <div className=\"info\">\r\n          관심{product.wishes} · 댓글{product.comments}\r\n        </div>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  const newList = products.newProduct.map((product) => {\r\n    const src =\r\n      JSON.parse(product.img).length === 0 || !product.img\r\n        ? alt\r\n        : JSON.parse(product.img)[0];\r\n    return (\r\n      <Item key={product.id}>\r\n        <img\r\n          src={src}\r\n          alt={product.name}\r\n          onError={(e) => (e.target.src = alt)}\r\n          onClick={() => navigate(`/product/${product.id}`)}\r\n        />\r\n        <div className=\"name\">{product.name}</div>\r\n        <div className=\"price\">{Number(product.price).toLocaleString()}원</div>\r\n        <div>{product.address}</div>\r\n        <div className=\"info\">\r\n          관심{product.wishes} · 댓글{product.comments}\r\n        </div>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow:\r\n      products.popularProduct.length < 3\r\n        ? products.popularProduct.length\r\n        : show,\r\n    slidesToScroll: 1,\r\n    arrows: false,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n  };\r\n\r\n  const settings2 = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow:\r\n      products.newProduct.length < 3 ? products.newProduct.length : show,\r\n    slidesToScroll: 1,\r\n    arrows: false,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n  };\r\n\r\n  return (\r\n    fetch && (\r\n      <Container>\r\n        <Title>인기 매물</Title>\r\n        <Slider {...settings}>{popularList}</Slider>\r\n        <Title>최근 등록된 매물</Title>\r\n        <Slider {...settings2}>{newList}</Slider>\r\n      </Container>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from \"@emotion/styled\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nexport const Container = styled.main`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledModal = styled(Modal)`\r\n  .container {\r\n    position: absolute;\r\n    width: 500px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    border-radius: 30px;\r\n  }\r\n  .header {\r\n    width: 100%;\r\n    height: 100px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .list {\r\n    width: 100%;\r\n  }\r\n  .item {\r\n    width: calc(100% - 60px);\r\n    height: 100px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 30px;\r\n    justify-content: space-between;\r\n  }\r\n  .profile {\r\n    display: flex;\r\n    align-items: center;\r\n    img {\r\n      height: 50px;\r\n      width: 50px;\r\n      border-radius: 50%;\r\n      object-fit: cover;\r\n      margin-right: 30px;\r\n    }\r\n  }\r\n  .button {\r\n    width: 100%;\r\n    height: 100px;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const Article = styled.article`\r\n  width: 700px;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\nexport const SoldTag = styled.div`\r\n  width: 100%;\r\n  height: 500px;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(238, 238, 238, 0.3);\r\n  z-index: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4rem;\r\n  font-weight: bold;\r\n  color: #ddd;\r\n`;\r\n\r\nexport const Img = styled.div`\r\n  img {\r\n    width: 100%;\r\n    height: 500px;\r\n    border-radius: 10px;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Controls = styled.section`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #eee;\r\n  a {\r\n    color: #3f51b5;\r\n    text-decoration: none;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Wish = styled.section`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #eee;\r\n  .icon {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.section`\r\n  width: 100%;\r\n  padding-top: 30px;\r\n  padding-bottom: 30px;\r\n  border-bottom: 1px solid #eee;\r\n  .address {\r\n    width: 100%;\r\n    font-size: smaller;\r\n  }\r\n  .date {\r\n    width: 100%;\r\n    color: gray;\r\n    font-size: smaller;\r\n  }\r\n  .name {\r\n    width: 100%;\r\n    font-size: 1.4rem;\r\n    font-weight: bold;\r\n    padding: 10px 0;\r\n  }\r\n  .price {\r\n    width: 100%;\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    color: #3f51b5;\r\n  }\r\n  .intro {\r\n    width: 100%;\r\n    white-space: pre-wrap;\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nexport const Seller = styled.section`\r\n  width: 100%;\r\n  height: 100px;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  .profile {\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: bold;\r\n  }\r\n\r\n  img {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  a {\r\n    color: #3f51b5;\r\n    text-decoration: none;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Comment = styled.section`\r\n  width: 100%;\r\n  .title {\r\n    width: 100%;\r\n    height: 100px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: bold;\r\n  }\r\n  .write {\r\n    width: calc(100% - 40px);\r\n    height: 100px;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid #eee;\r\n    align-items: center;\r\n  }\r\n  .list {\r\n    width: 100%;\r\n    padding: 30px 0;\r\n  }\r\n`;\r\n\r\nexport const CommentItem = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Question = styled.div`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 20px;\r\n\r\n  img {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  .nickname {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .date {\r\n    font-size: smaller;\r\n    color: gray;\r\n  }\r\n\r\n  .text {\r\n    word-break: break-all;\r\n  }\r\n\r\n  .reply {\r\n    color: gray;\r\n    cursor: pointer;\r\n    :hover {\r\n      color: black;\r\n    }\r\n  }\r\n  .reply-write {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Answer = styled.div`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 20px;\r\n  padding-left: 90px;\r\n  img {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  .nickname {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .date {\r\n    font-size: smaller;\r\n    color: gray;\r\n  }\r\n\r\n  .text {\r\n    word-break: break-all;\r\n  }\r\n`;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axiosInstance from \"../../axios\";\r\nimport Slider from \"react-slick\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { start, end } from \"../../features/loading\";\r\n\r\nimport {\r\n  Container,\r\n  Article,\r\n  SoldTag,\r\n  Img,\r\n  Controls,\r\n  Wish,\r\n  Text,\r\n  Seller,\r\n  Comment,\r\n  CommentItem,\r\n  Question,\r\n  Answer,\r\n  StyledModal,\r\n} from \"./styles\";\r\nimport alt from \"../../image/alt.png\";\r\n\r\nconst Product = () => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const [fetch, setFetch] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [product, setProduct] = useState({});\r\n  const [imgs, setImgs] = useState([]);\r\n  const [wish, setWish] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [buyer, setBuyer] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getProduct();\r\n  }, []);\r\n\r\n  const getProduct = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.get(`/api/product/${params.id}`);\r\n      if (response.status === 200) {\r\n        let users = [];\r\n        response.data.comments.forEach((comment) => {\r\n          const user = {\r\n            id: comment.user.id,\r\n            nickname: comment.user.nickname,\r\n            img: comment.user.img,\r\n          };\r\n          const found = users.find((v) => v.id === user.id);\r\n          if (found === undefined) users.push(user);\r\n        });\r\n        response.data.wishes.forEach((wish) => {\r\n          const user = {\r\n            id: wish.user.id,\r\n            nickname: wish.user.nickname,\r\n            img: wish.user.img,\r\n          };\r\n          const found = users.find((v) => v.id === user.id);\r\n          if (found === undefined) users.push(user);\r\n        });\r\n        setProduct(response.data);\r\n        setImgs(JSON.parse(response.data.img));\r\n        if (auth.loggedIn) {\r\n          const isWish = response.data.wishes.filter(\r\n            (wish) => wish.userId === auth.id\r\n          );\r\n          if (isWish.length === 0) setWish(false);\r\n          else setWish(true);\r\n        }\r\n        setComments(response.data.comments);\r\n        setUsers(users);\r\n        setFetch(true);\r\n      }\r\n    } catch (error) {\r\n      return navigate(\"/\", { replace: true });\r\n    }\r\n    dispatch(end());\r\n  }, []);\r\n\r\n  const postWish = useCallback(async () => {\r\n    if (!auth.loggedIn) return window.alert(\"로그인을 해주세요\");\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.post(\r\n        \"/api/wish\",\r\n        {\r\n          productId: product.id,\r\n        },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) getProduct();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, [product]);\r\n\r\n  const postComment = useCallback(async () => {\r\n    if (!auth.loggedIn) return window.alert(\"로그인을 해주세요\");\r\n    if (comment === \"\") return window.alert(\"내용을 입력해주세요\");\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.post(\r\n        `/api/comment`,\r\n        {\r\n          productId: params.id,\r\n          comment,\r\n        },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        setComment(\"\");\r\n        getProduct();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, [comment]);\r\n\r\n  const putComment = useCallback(async (e, id) => {\r\n    const parentNode = e.target.parentNode;\r\n    const answer = e.target.parentNode.getElementsByTagName(\"input\")[0].value;\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.put(\r\n        \"/api/comment\",\r\n        {\r\n          id,\r\n          answer,\r\n        },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) getProduct();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n    parentNode.style.display = \"none\";\r\n  }, []);\r\n\r\n  const putProduct = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.put(\r\n        \"/api/product/1\",\r\n        {\r\n          id: params.id,\r\n          buyer: buyer,\r\n        },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) getProduct();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, [buyer]);\r\n\r\n  const onClickReply = useCallback((e) => {\r\n    if (e.target.nextSibling.style.display === \"flex\")\r\n      e.target.nextSibling.style.display = \"none\";\r\n    else e.target.nextSibling.style.display = \"flex\";\r\n  }, []);\r\n\r\n  const imglist = imgs.map((img) => {\r\n    return (\r\n      <Img key={img}>\r\n        <img src={img} alt=\"img\" onError={(e) => (e.target.src = alt)} />\r\n      </Img>\r\n    );\r\n  });\r\n\r\n  const commentList = comments.map((comment) => {\r\n    const userProfileImg = comment.user.img ? comment.user.img : alt;\r\n    const sellerProfileImg = product.user.img ? product.user.img : alt;\r\n    if (comment.userId === auth.id || product.userId === auth.id)\r\n      return (\r\n        <CommentItem key={comment.id}>\r\n          <Question>\r\n            <img\r\n              src={userProfileImg}\r\n              alt=\"profile\"\r\n              onError={(e) => (e.target.src = alt)}\r\n            />\r\n            <div>\r\n              <div className=\"nickname\">{comment.user.nickname}</div>\r\n              <div className=\"date\">{comment.createdAt.substr(0, 10)}</div>\r\n              <div className=\"text\">{comment.comment}</div>\r\n              {product.userId === auth.id && comment.answer === null && (\r\n                <>\r\n                  <div className=\"reply\" onClick={onClickReply}>\r\n                    답글\r\n                  </div>\r\n                  <div className=\"reply-write\">\r\n                    <TextField variant=\"standard\" fullWidth />\r\n                    <Button\r\n                      variant=\"text\"\r\n                      onClick={(e) => putComment(e, comment.id)}\r\n                    >\r\n                      작성\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Question>\r\n          {comment.answer !== null && (\r\n            <Answer>\r\n              <img\r\n                src={sellerProfileImg}\r\n                alt=\"profile\"\r\n                onError={(e) => (e.target.src = alt)}\r\n              />\r\n              <div>\r\n                <div className=\"nickname\">{product.user.nickname}</div>\r\n                <div className=\"date\">{comment.updatedAt.substr(0, 10)}</div>\r\n                <div className=\"text\">{comment.answer}</div>\r\n              </div>\r\n            </Answer>\r\n          )}\r\n        </CommentItem>\r\n      );\r\n  });\r\n\r\n  const userList = users.map((user) => {\r\n    const src = user.img ? user.img : alt;\r\n    return (\r\n      <div key={user.id} className=\"item\">\r\n        <div className=\"profile\">\r\n          <img src={src} alt=\"img\" onError={(e) => (e.target.src = alt)} />\r\n          <div>{user.nickname}</div>\r\n        </div>\r\n        <Radio\r\n          value={user.id}\r\n          checked={buyer === user.id}\r\n          onChange={(e) => setBuyer(e.target.value)}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    arrows: false,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n\r\n  return (\r\n    fetch && (\r\n      <Container>\r\n        <StyledModal open={open} onClose={() => setOpen(false)}>\r\n          <div className=\"container\">\r\n            <div className=\"header\">구매자 목록</div>\r\n            <div className=\"list\">{userList}</div>\r\n            <div className=\"item\">\r\n              <div>목록에 없는 사용자</div>\r\n              <Radio\r\n                value=\"\"\r\n                checked={buyer === \"\"}\r\n                onChange={(e) => setBuyer(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"button\">\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  putProduct();\r\n                  setOpen(false);\r\n                }}\r\n                size=\"large\"\r\n              >\r\n                판매 종료하기\r\n              </Button>\r\n              <Button\r\n                variant=\"text\"\r\n                onClick={() => setOpen(false)}\r\n                size=\"large\"\r\n              >\r\n                취소\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </StyledModal>\r\n\r\n        <Article>\r\n          {(product.state === \"1\" || product.state === \"2\") && (\r\n            <SoldTag>판매 완료</SoldTag>\r\n          )}\r\n\r\n          <Slider {...settings}>{imglist}</Slider>\r\n\r\n          {product.userId === auth.id && (\r\n            <Controls>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => setOpen(true)}\r\n                size=\"large\"\r\n                disabled={product.state !== \"0\"}\r\n              >\r\n                판매 종료하기\r\n              </Button>\r\n              <Link to={`/update/${product.id}`}>글 수정</Link>\r\n            </Controls>\r\n          )}\r\n\r\n          <Wish>\r\n            <div>{`관심 ${product.wishes.length} · 댓글 ${product.comments.length}`}</div>\r\n            {product.userId !== auth.id && (\r\n              <div className=\"icon\" onClick={postWish}>\r\n                {wish ? (\r\n                  <Favorite fontSize=\"large\" color=\"primary\" />\r\n                ) : (\r\n                  <FavoriteBorder fontSize=\"large\" color=\"primary\" />\r\n                )}\r\n              </div>\r\n            )}\r\n          </Wish>\r\n\r\n          <Text>\r\n            <div className=\"address\">{product.address}</div>\r\n            <div className=\"date\">{product.createdAt.substr(0, 10)}</div>\r\n            <div className=\"name\">{product.name}</div>\r\n            <div className=\"price\">\r\n              {Number(product.price).toLocaleString()}원\r\n            </div>\r\n            <pre className=\"intro\">{product.intro}</pre>\r\n          </Text>\r\n\r\n          <Seller>\r\n            <div className=\"profile\">\r\n              <img\r\n                src={\r\n                  product.user.img\r\n                    ? product.user.img\r\n                        .replace(/\\\\/gi, \"/\")\r\n                        .replace(/public/gi, \"\")\r\n                    : alt\r\n                }\r\n                alt=\"profile\"\r\n              />\r\n              <div>{product.user.nickname}</div>\r\n            </div>\r\n            <Link to={`/user/${product.user.id}`}>판매 상품 더 보기</Link>\r\n          </Seller>\r\n\r\n          <Comment>\r\n            <div className=\"title\">\r\n              {product.userId === auth.id\r\n                ? comments.length === 0\r\n                  ? \"작성된 댓글이 없습니다\"\r\n                  : `${comments.length}개의 댓글`\r\n                : product.state === \"0\"\r\n                ? \"판매자에게 댓글로 문의해보세요\"\r\n                : \" 판매완료된 상품에는 댓글을 달 수 없습니다\"}\r\n            </div>\r\n            {product.state === \"0\" && (\r\n              <div className=\"write\">\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  value={comment}\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                />\r\n                <Button variant=\"text\" onClick={postComment}>\r\n                  작성\r\n                </Button>\r\n              </div>\r\n            )}\r\n            <div className=\"list\">{commentList}</div>\r\n          </Comment>\r\n        </Article>\r\n      </Container>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  font-size: 5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const Contents = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n  > div {\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport axiosInstance from \"../../axios\";\r\n\r\nimport { Main, Header, Contents } from \"./styles\";\r\n\r\nconst Signup = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const idRegExp = /^[a-z0-9]{4,12}$/;\r\n  const passwordRegExp = /^[a-zA-Z0-9]{6,18}$/;\r\n  const nicknameRegExp = /^[가-힣]{2,6}$/;\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [idCheck, setIdCheck] = useState(false);\r\n  const [idCheckResult, setIdCheckResult] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [nicknameCheck, setNicknameCheck] = useState(false);\r\n  const [nicknameCheckResult, setNicknameCheckResult] = useState(false);\r\n\r\n  const onChangeId = useCallback((e) => {\r\n    setId(e.target.value);\r\n    setIdCheck(false);\r\n    setIdCheckResult(false);\r\n  }, []);\r\n\r\n  const onChangeNickname = useCallback((e) => {\r\n    setNickname(e.target.value);\r\n    setNicknameCheck(false);\r\n    setNicknameCheckResult(false);\r\n  }, []);\r\n\r\n  const checkId = useCallback(async () => {\r\n    if (id === \"admin\") return window.alert(\"사용할 수 없는 아이디입니다\");\r\n    if (!idRegExp.test(id)) return;\r\n    try {\r\n      const response = await axiosInstance.get(`/api/user/id?id=${id}`);\r\n      setIdCheck(true);\r\n      if (response.status === 200 && response.data) setIdCheckResult(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [id]);\r\n\r\n  const checkNickname = useCallback(async () => {\r\n    if (!nicknameRegExp.test(nickname)) return;\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        `/api/user/nickname?nickname=${nickname}`\r\n      );\r\n      setNicknameCheck(true);\r\n      if (response.status === 200 && response.data)\r\n        setNicknameCheckResult(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [nickname]);\r\n\r\n  const postUser = useCallback(async () => {\r\n    if (\r\n      !idCheck ||\r\n      !idCheckResult ||\r\n      password !== passwordCheck ||\r\n      !nicknameCheck ||\r\n      !nicknameCheckResult\r\n    )\r\n      return window.alert(\"정보를 정확히 입력해주세요\");\r\n\r\n    try {\r\n      const response = await axiosInstance.post(\"/api/user\", {\r\n        id,\r\n        password,\r\n        nickname,\r\n      });\r\n      if (response.status === 200) navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [\r\n    id,\r\n    idCheck,\r\n    idCheckResult,\r\n    password,\r\n    passwordCheck,\r\n    nickname,\r\n    nicknameCheck,\r\n    nicknameCheckResult,\r\n  ]);\r\n\r\n  return (\r\n    <Main>\r\n      <Header>회원가입</Header>\r\n      <Contents>\r\n        <TextField\r\n          label=\"아이디\"\r\n          variant=\"outlined\"\r\n          error={!idRegExp.test(id) || !idCheck || !idCheckResult}\r\n          helperText={\r\n            !idRegExp.test(id)\r\n              ? \"4~12자의 소문자, 숫자만 사용 가능합니다\"\r\n              : !idCheck\r\n              ? \"중복확인을 해주세요\"\r\n              : !idCheckResult && \"이미 사용중인 아이디입니다\"\r\n          }\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <Button onClick={checkId} disabled={!idRegExp.test(id)}>\r\n                  중복확인\r\n                </Button>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          onChange={onChangeId}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          error={!passwordRegExp.test(password)}\r\n          helperText={\r\n            !passwordRegExp.test(password) &&\r\n            \"6~18자의 대 소문자, 숫자만 사용 가능합니다\"\r\n          }\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호 확인\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          error={password !== passwordCheck}\r\n          helperText={\r\n            password !== passwordCheck && \"비밀번호가 일치하지 않습니다\"\r\n          }\r\n          onChange={(e) => setPasswordCheck(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"별명\"\r\n          variant=\"outlined\"\r\n          error={\r\n            !nicknameRegExp.test(nickname) ||\r\n            !nicknameCheck ||\r\n            !nicknameCheckResult\r\n          }\r\n          helperText={\r\n            !nicknameRegExp.test(nickname)\r\n              ? \"2~6자의 한글만 사용 가능합니다\"\r\n              : !nicknameCheck\r\n              ? \"중복확인을 해주세요\"\r\n              : !nicknameCheckResult && \"이미 사용중인 별명입니다\"\r\n          }\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <Button\r\n                  onClick={checkNickname}\r\n                  disabled={!nicknameRegExp.test(nickname)}\r\n                >\r\n                  중복확인\r\n                </Button>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          onChange={onChangeNickname}\r\n        />\r\n        <Button variant=\"contained\" size=\"large\" onClick={postUser}>\r\n          회원가입\r\n        </Button>\r\n        <Button variant=\"text\" size=\"large\" onClick={() => navigate(\"/\")}>\r\n          취소\r\n        </Button>\r\n      </Contents>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  font-size: 5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const Inputs = styled.div`\r\n  width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  > div {\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { login } from \"../../features/auth\";\r\nimport axiosInstance from \"../../axios\";\r\n\r\nimport { Main, Header, Inputs } from \"./styles\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const getUser = useCallback(async () => {\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        `/api/user?id=${id}&password=${password}`\r\n      );\r\n      if (response.status === 200)\r\n        return dispatch(login({ id, token: response.data }));\r\n    } catch (error) {\r\n      if (error.response.status === 400)\r\n        return window.alert(\"아이디 또는 비밀번호를 확인해주세요\");\r\n    }\r\n  }, [id, password]);\r\n\r\n  const onKeyDown = useCallback(\r\n    (e) => {\r\n      if (e.code === \"Enter\") getUser();\r\n    },\r\n    [getUser]\r\n  );\r\n\r\n  return (\r\n    <Main>\r\n      <Header>로그인</Header>\r\n      <Inputs>\r\n        <TextField\r\n          label=\"아이디\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => setId(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"비밀번호\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n        <Button variant=\"contained\" size=\"large\" onClick={getUser}>\r\n          로그인\r\n        </Button>\r\n      </Inputs>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    span {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  img {\r\n    width: 200px;\r\n    height: 200px;\r\n    border-radius: 50%;\r\n    margin-right: 50px;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .name {\r\n    font-size: 1.4rem;\r\n    font-weight: bold;\r\n  }\r\n\r\n  a {\r\n    color: gray;\r\n    text-decoration: none;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    img {\r\n      width: 100px;\r\n      height: 100px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Controls = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-gap: 100px;\r\n  grid-template-columns: repeat(3, 1fr);\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  img {\r\n    width: 100%;\r\n    height: 300px;\r\n    border-radius: 10px;\r\n    object-fit: cover;\r\n    :hover {\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n  .name {\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    padding: 10px 0;\r\n  }\r\n  .price {\r\n    font-weight: bold;\r\n    font-size: 1.1rem;\r\n    color: #1976d2;\r\n  }\r\n  .info {\r\n    color: gray;\r\n  }\r\n`;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { start, end } from \"../../features/loading\";\r\n\r\nimport { Main, Info, Profile, Controls, List, Item } from \"./styles\";\r\nimport alt from \"../../image/alt.png\";\r\n\r\nconst User = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const params = useParams();\r\n\r\n  const [user, setUser] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getProduct();\r\n  }, [page]);\r\n\r\n  const getUser = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.get(`/api/user/${params.id}`);\r\n      if (response.status === 200) setUser(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, []);\r\n\r\n  const getProduct = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.get(\r\n        `/api/product/seller?userId=${params.id}&page=${page}`\r\n      );\r\n      setProducts(response.data.rows);\r\n      setCount(response.data.count);\r\n      setPages(Math.ceil(response.data.count / 6));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, [page]);\r\n\r\n  const productList = products.map((product) => {\r\n    const src =\r\n      JSON.parse(product.img).length === 0 || !product.img\r\n        ? alt\r\n        : JSON.parse(product.img)[0];\r\n\r\n    return (\r\n      <Item key={product.id}>\r\n        <Link to={`/product/${product.id}`}>\r\n          <img src={src} alt=\"sale\" onError={(e) => (e.target.src = alt)} />\r\n        </Link>\r\n        <div className=\"name\">{product.name}</div>\r\n        <div className=\"price\">{product.price}원</div>\r\n        <div>{product.address}</div>\r\n        <div className=\"info\">\r\n          관심{product.wishes} · 댓글{product.comments}\r\n        </div>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Main>\r\n      <Info>\r\n        <Profile>\r\n          <img src={user.img ? user.img : alt} alt=\"profile\" />\r\n          <div>\r\n            <div className=\"name\">{user.nickname}</div>\r\n            {auth.id === params.id && <Link to=\"/profile\">수정</Link>}\r\n          </div>\r\n        </Profile>\r\n        <span>\r\n          {user.nickname}님이 판매중인 상품 {count}건\r\n        </span>\r\n      </Info>\r\n      <Controls>\r\n        <Pagination page={page} count={pages} onChange={(e, v) => setPage(v)} />\r\n      </Controls>\r\n\r\n      <List>{productList}</List>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.main`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 300px;\r\n  height: 300px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  margin: 50px 0;\r\n`;\r\n\r\nexport const Contents = styled.div`\r\n  > *:not(:last-child) {\r\n    margin-bottom: 25px;\r\n  }\r\n  .img {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .textfield {\r\n    width: 300px;\r\n  }\r\n  .nickname,\r\n  .password {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { start, end } from \"../../features/loading\";\r\n\r\nimport { Container, Title, Img, Contents } from \"./styles\";\r\nimport alt from \"../../image/alt.png\";\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const nicknameRegExp = /^[가-힣]{2,6}$/;\r\n  const passwordRegExp = /^[a-zA-Z0-9]{6,18}$/;\r\n\r\n  const [user, setUser] = useState({});\r\n  const [img, setImg] = useState();\r\n  const [src, setSrc] = useState();\r\n  const [deleteImg, setDeleteImg] = useState(false);\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [nicknameCheck, setNicknameCheck] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordCheck, setNewPasswordCheck] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const getUser = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.get(`/api/user/${auth.id}`);\r\n      if (response.status === 200) {\r\n        setUser(response.data);\r\n        setImg();\r\n        setSrc();\r\n        setDeleteImg(false);\r\n        setNickname(response.data.nickname);\r\n        setPassword(\"\");\r\n        setNewPassword(\"\");\r\n        setNewPasswordCheck(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, []);\r\n\r\n  const checkNickname = useCallback(async () => {\r\n    if (!nicknameRegExp.test(nickname)) return;\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.get(\r\n        `/api/user/nickname?nickname=${nickname}`\r\n      );\r\n      if (response.status === 200 && response.data) setNicknameCheck(true);\r\n\r\n      if (response.status === 200 && !response.data)\r\n        window.alert(\"이미 사용중인 별명입니다\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, [nickname]);\r\n\r\n  const putNickname = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.put(\r\n        \"/api/user/nickname\",\r\n        { nickname },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      );\r\n      window.alert(\"별명이 변경되었습니다.\");\r\n      getUser();\r\n    } catch (error) {\r\n      getUser();\r\n    }\r\n    dispatch(end());\r\n  }, [nickname]);\r\n\r\n  const putPassword = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.put(\r\n        \"/api/user/password\",\r\n        { password, newPassword },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      );\r\n      window.alert(\"비밀번호가 변경되었습니다.\");\r\n      getUser();\r\n    } catch (error) {\r\n      window.alert(\"잘못된 비밀번호입니다.\");\r\n      getUser();\r\n    }\r\n    dispatch(end());\r\n  }, [password, newPassword]);\r\n\r\n  const putImg = useCallback(async () => {\r\n    URL.revokeObjectURL(src);\r\n    const formData = new FormData();\r\n    formData.append(\"img\", img);\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.put(\"/api/user/img\", formData, {\r\n        headers: { token: auth.token },\r\n      });\r\n      getUser();\r\n    } catch (error) {\r\n      getUser();\r\n    }\r\n    dispatch(end());\r\n  }, [img]);\r\n\r\n  const onClickUpload = useCallback(() => {\r\n    const input = document.getElementById(\"profile-img-input\");\r\n    input.click();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Title>프로필 수정</Title>\r\n      <Img\r\n        src={user.img && !deleteImg && !src ? user.img : src || alt}\r\n        alt=\"profile\"\r\n      />\r\n      <Contents>\r\n        <div className=\"img\">\r\n          <ButtonGroup>\r\n            <Button\r\n              variant={img ? \"contained\" : \"outlined\"}\r\n              onClick={onClickUpload}\r\n            >\r\n              업로드\r\n              <input\r\n                id=\"profile-img-input\"\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  if (e.target.files.length) {\r\n                    setImg(e.target.files[0]);\r\n                    setSrc(URL.createObjectURL(e.target.files[0]));\r\n                    setDeleteImg(false);\r\n                  }\r\n                }}\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </Button>\r\n            <Button\r\n              variant={!img && !deleteImg ? \"contained\" : \"outlined\"}\r\n              onClick={() => {\r\n                const input = document.getElementById(\"profile-img-input\");\r\n                input.value = \"\";\r\n                URL.revokeObjectURL(src);\r\n                setImg();\r\n                setSrc();\r\n                setDeleteImg(false);\r\n              }}\r\n            >\r\n              원래대로\r\n            </Button>\r\n            <Button\r\n              disabled={!user.img}\r\n              variant={deleteImg ? \"contained\" : \"outlined\"}\r\n              onClick={() => {\r\n                const input = document.getElementById(\"profile-img-input\");\r\n                input.value = \"\";\r\n                URL.revokeObjectURL(src);\r\n                setImg();\r\n                setSrc();\r\n                setDeleteImg(true);\r\n              }}\r\n            >\r\n              삭제\r\n            </Button>\r\n          </ButtonGroup>\r\n          <Button onClick={putImg} disabled={!img && !deleteImg}>\r\n            변경\r\n          </Button>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"nickname\">\r\n          <div className=\"textfield\">\r\n            <TextField\r\n              label=\"별명\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={nickname}\r\n              onChange={(e) => {\r\n                setNickname(e.target.value);\r\n                setNicknameCheck(false);\r\n              }}\r\n              error={\r\n                user.nickname === nickname\r\n                  ? false\r\n                  : !nicknameCheck || !nicknameRegExp.test(nickname)\r\n              }\r\n              helperText={\r\n                user.nickname === nickname\r\n                  ? false\r\n                  : !nicknameRegExp.test(nickname)\r\n                  ? \"2~6자의 한글만 사용 가능합니다\"\r\n                  : !nicknameCheck && \"중복확인을 해주세요\"\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <Button\r\n                      disabled={user.nickname === nickname || nicknameCheck}\r\n                      onClick={checkNickname}\r\n                    >\r\n                      중복확인\r\n                    </Button>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <Button\r\n            disabled={\r\n              user.nickname === nickname ||\r\n              !nicknameRegExp.test(nickname) ||\r\n              !nicknameCheck\r\n            }\r\n            onClick={putNickname}\r\n          >\r\n            변경\r\n          </Button>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"textfield\">\r\n          <TextField\r\n            label=\"현재 비밀번호\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"textfield\">\r\n          <TextField\r\n            label=\"신규 비밀번호\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            error={!passwordRegExp.test(newPassword)}\r\n            helperText={\r\n              !passwordRegExp.test(newPassword) &&\r\n              \"6~18자의 대 소문자, 숫자만 사용 가능합니다\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"password\">\r\n          <div className=\"textfield\">\r\n            <TextField\r\n              label=\"신규 비밀번호 확인\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={newPasswordCheck}\r\n              onChange={(e) => setNewPasswordCheck(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            disabled={\r\n              newPassword !== newPasswordCheck ||\r\n              !passwordRegExp.test(newPassword)\r\n            }\r\n            onClick={putPassword}\r\n          >\r\n            변경\r\n          </Button>\r\n        </div>\r\n      </Contents>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Contents = styled.div`\r\n  width: 700px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media screen and (max-width: 767px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  font-size: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const Img = styled.div`\r\n  width: 100%;\r\n  img {\r\n    width: 100%;\r\n    height: 500px;\r\n    border-radius: 10px;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Icons = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  label {\r\n    cursor: pointer;\r\n    margin-left: 25px;\r\n  }\r\n`;\r\n\r\nexport const Inputs = styled.div`\r\n  width: 100%;\r\n\r\n  .name,\r\n  .price,\r\n  .address {\r\n    width: 100%;\r\n    height: 100px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  textarea {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 300px;\r\n    resize: none;\r\n    padding: 25px;\r\n    outline-color: #3f51b5;\r\n    margin-top: 25px;\r\n    border-color: #ddd;\r\n  }\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Slider from \"react-slick\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { start, end } from \"../../features/loading\";\r\n\r\nimport {\r\n  AddPhotoAlternateOutlined,\r\n  SettingsBackupRestoreOutlined,\r\n} from \"@mui/icons-material\";\r\n\r\nimport { Main, Contents, Header, Img, Icons, Inputs, Buttons } from \"./styles\";\r\nimport alt from \"../../image/alt.png\";\r\n\r\nconst Write = () => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n\r\n  const priceRegExp = /^\\d*$/;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [imgs, setImgs] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [intro, setIntro] = useState(\"\");\r\n\r\n  const handleComplete = useCallback((data) => {\r\n    setAddress(`${data.sido} ${data.sigungu} ${data.bname}`);\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const postProduct = useCallback(async () => {\r\n    if (\r\n      imgs.length === 0 ||\r\n      !name ||\r\n      !price ||\r\n      !address ||\r\n      !intro ||\r\n      !priceRegExp.test(price)\r\n    )\r\n      return window.alert(\"내용을 정확히 입력해주세요\");\r\n\r\n    const formData = new FormData();\r\n    for (let i = 0; i < imgs.length; i++) {\r\n      formData.append(\"img\", imgs[i]);\r\n    }\r\n    formData.append(\"name\", name);\r\n    formData.append(\"price\", price);\r\n    formData.append(\"address\", address);\r\n    formData.append(\"intro\", intro);\r\n\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.post(\"/api/product\", formData, {\r\n        headers: {\r\n          token: auth.token,\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        dispatch(end());\r\n        navigate(\"/\", { replace: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [imgs, name, price, address, intro]);\r\n\r\n  const imglist = Array.from(imgs).map((img) => {\r\n    const src = URL.createObjectURL(img);\r\n    URL.revokeObjectURL(img);\r\n    return <img key={img} src={src} alt=\"img\" />;\r\n  });\r\n\r\n  return (\r\n    <Main>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            width: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n        >\r\n          <DaumPostcode onComplete={handleComplete} />\r\n        </div>\r\n      </Modal>\r\n\r\n      <Contents>\r\n        <Header>글 쓰기</Header>\r\n        <Img>\r\n          <Slider {...settings}>\r\n            {imgs.length === 0 ? <img src={alt} alt=\"img\" /> : imglist}\r\n          </Slider>\r\n        </Img>\r\n\r\n        <Icons>\r\n          <div style={{ color: \"#d32f2f\", fontWeight: \"bold\" }}>\r\n            {imgs.length === 0 && \"사진을 등록해주세요!\"}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"write-img-input\">\r\n              <AddPhotoAlternateOutlined fontSize=\"large\" color=\"primary\" />\r\n            </label>\r\n            <input\r\n              id=\"write-img-input\"\r\n              type=\"file\"\r\n              onChange={(e) => setImgs(e.target.files)}\r\n              multiple\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n            />\r\n            <label>\r\n              <SettingsBackupRestoreOutlined\r\n                fontSize=\"large\"\r\n                color=\"primary\"\r\n                onClick={() => setImgs([])}\r\n              />\r\n            </label>\r\n          </div>\r\n        </Icons>\r\n\r\n        <Inputs>\r\n          <div className=\"name\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              label=\"글 제목\"\r\n              fullWidth\r\n              error={!name}\r\n              helperText={!name && \"제목을 입력해주세요\"}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"price\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              label=\"가격\"\r\n              fullWidth\r\n              error={!price || !priceRegExp.test(price)}\r\n              helperText={\r\n                !price\r\n                  ? \"상품의 가격을 입력해주세요\"\r\n                  : !priceRegExp.test(price) && \"숫자만 입력해주세요\"\r\n              }\r\n              onChange={(e) => setPrice(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">&#8361;</InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"address\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              label=\"주소\"\r\n              fullWidth\r\n              error={!address}\r\n              helperText={\r\n                !address &&\r\n                \"상품의 주소를 입력해주세요 (주소는 동이름 까지만 노출됩니다)\"\r\n              }\r\n              onClick={() => setOpen(true)}\r\n              readOnly\r\n              value={address}\r\n            />\r\n          </div>\r\n          <div className=\"intro\">\r\n            <textarea\r\n              placeholder=\"내용을 입력해주세요\"\r\n              onChange={(e) => setIntro(e.target.value)}\r\n            />\r\n          </div>\r\n        </Inputs>\r\n\r\n        <Buttons>\r\n          <Button variant=\"contained\" size=\"large\" onClick={postProduct}>\r\n            등록\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            onClick={() => navigate(\"/\", { replace: true })}\r\n          >\r\n            취소\r\n          </Button>\r\n        </Buttons>\r\n      </Contents>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Write;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Contents = styled.div`\r\n  width: 700px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media screen and (max-width: 767px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  font-size: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const Img = styled.div`\r\n  width: 100%;\r\n  img {\r\n    width: 100%;\r\n    height: 500px;\r\n    border-radius: 10px;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Icons = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  label {\r\n    cursor: pointer;\r\n    margin-left: 25px;\r\n  }\r\n`;\r\n\r\nexport const Inputs = styled.div`\r\n  width: 100%;\r\n\r\n  .name,\r\n  .price,\r\n  .address {\r\n    width: 100%;\r\n    height: 100px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  textarea {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 300px;\r\n    resize: none;\r\n    padding: 25px;\r\n    outline-color: #3f51b5;\r\n    margin-top: 25px;\r\n    border-color: #ddd;\r\n  }\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { start, end } from \"../../features/loading\";\r\n\r\nimport {\r\n  AddPhotoAlternateOutlined,\r\n  SettingsBackupRestoreOutlined,\r\n} from \"@mui/icons-material\";\r\n\r\nimport alt from \"../../image/alt.png\";\r\nimport { Main, Header, Contents, Img, Icons, Inputs, Buttons } from \"./styles\";\r\n\r\nconst Update = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const priceRegExp = /^\\d*$/;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [updateImg, setUpdateImg] = useState(false);\r\n  const [originalImgs, setOriginalImgs] = useState([]);\r\n  const [imgs, setImgs] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [intro, setIntro] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getProduct();\r\n  }, []);\r\n\r\n  const getProduct = useCallback(async () => {\r\n    try {\r\n      const response = await axiosInstance.get(`/api/product/${params.id}`);\r\n      if (response.status === 200) {\r\n        setOriginalImgs(JSON.parse(response.data.img));\r\n        setName(response.data.name);\r\n        setPrice(response.data.price);\r\n        setAddress(response.data.address);\r\n        setIntro(response.data.intro);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  const putProduct = useCallback(async () => {\r\n    if (!name || !price || !address || !intro || !priceRegExp.test(price))\r\n      return window.alert(\"내용을 정확히 입력해주세요\");\r\n\r\n    const formData = new FormData();\r\n    for (let i = 0; i < imgs.length; i++) {\r\n      formData.append(\"img\", imgs[i]);\r\n    }\r\n    formData.append(\"name\", name);\r\n    formData.append(\"price\", price);\r\n    formData.append(\"address\", address);\r\n    formData.append(\"intro\", intro);\r\n    formData.append(\"id\", params.id);\r\n    formData.append(\"updateImg\", updateImg);\r\n\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.put(\"/api/product\", formData, {\r\n        headers: {\r\n          token: auth.token,\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        dispatch(end());\r\n        navigate(`/product/${params.id}`, { replace: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [updateImg, imgs, name, price, address, intro]);\r\n\r\n  const handleComplete = useCallback((data) => {\r\n    setAddress(`${data.sido} ${data.sigungu} ${data.bname}`);\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const originalImgList = originalImgs.map((img) => {\r\n    const src = !img ? alt : img;\r\n    return (\r\n      <img\r\n        key={img}\r\n        src={src}\r\n        alt={img}\r\n        onError={(e) => (e.target.src = alt)}\r\n      />\r\n    );\r\n  });\r\n\r\n  const imgList = Array.from(imgs).map((img) => {\r\n    const src = URL.createObjectURL(img);\r\n    URL.revokeObjectURL(img);\r\n    return <img key={img} src={src} alt=\"img\" />;\r\n  });\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n\r\n  return (\r\n    <Main>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            width: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n        >\r\n          <DaumPostcode onComplete={handleComplete} />\r\n        </div>\r\n      </Modal>\r\n\r\n      <Contents>\r\n        <Header>글 수정</Header>\r\n\r\n        <Img>\r\n          <Slider {...settings}>{updateImg ? imgList : originalImgList}</Slider>\r\n        </Img>\r\n\r\n        <Icons>\r\n          <label htmlFor=\"update-img-input\">\r\n            <AddPhotoAlternateOutlined fontSize=\"large\" color=\"primary\" />\r\n          </label>\r\n          <input\r\n            id=\"update-img-input\"\r\n            type=\"file\"\r\n            onChange={(e) => {\r\n              setImgs(e.target.files);\r\n              if (e.target.files.length === 0) {\r\n                setUpdateImg(false);\r\n              } else setUpdateImg(true);\r\n            }}\r\n            multiple\r\n            accept=\"image/*\"\r\n            style={{ display: \"none\" }}\r\n          />\r\n          <label>\r\n            <SettingsBackupRestoreOutlined\r\n              fontSize=\"large\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                setImgs([]);\r\n                setUpdateImg(false);\r\n              }}\r\n            />\r\n          </label>\r\n        </Icons>\r\n\r\n        <Inputs>\r\n          <div className=\"name\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              label=\"글 제목\"\r\n              fullWidth\r\n              value={name}\r\n              error={!name}\r\n              helperText={!name && \"제목을 입력해주세요\"}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"price\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              label=\"가격\"\r\n              fullWidth\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n              error={!price || !priceRegExp.test(price)}\r\n              helperText={\r\n                !price\r\n                  ? \"상품의 가격을 입력해주세요\"\r\n                  : !priceRegExp.test(price) && \"숫자만 입력해주세요\"\r\n              }\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">&#8361;</InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"address\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              label=\"주소\"\r\n              fullWidth\r\n              readOnly\r\n              value={address}\r\n              onClick={() => setOpen(true)}\r\n            />\r\n          </div>\r\n          <div className=\"intro\">\r\n            <textarea\r\n              placeholder=\"내용을 입력해주세요\"\r\n              value={intro}\r\n              onChange={(e) => setIntro(e.target.value)}\r\n            />\r\n          </div>\r\n        </Inputs>\r\n\r\n        <Buttons>\r\n          <Button variant=\"contained\" size=\"large\" onClick={putProduct}>\r\n            수정\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            onClick={() => navigate(`/product/${params.id}`, { replace: true })}\r\n          >\r\n            취소\r\n          </Button>\r\n        </Buttons>\r\n      </Contents>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 50px;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-gap: 100px;\r\n  grid-template-columns: repeat(3, 1fr);\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  img {\r\n    width: 100%;\r\n    height: 300px;\r\n    object-fit: cover;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    :hover {\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n  .name {\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n  }\r\n  .price {\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    color: #3f51b5;\r\n  }\r\n  .info {\r\n    color: gray;\r\n  }\r\n`;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { start, end } from \"../../features/loading\";\r\n\r\nimport { Main, Header, List, Item } from \"./styles.js\";\r\nimport alt from \"../../image/alt.png\";\r\n\r\nconst Search = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [count, setCount] = useState(0);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [location]);\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.post(\"/api/product/search\", {\r\n        keyword: location.state,\r\n      });\r\n      setCount(response.data.count);\r\n      setProducts(response.data.rows);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, [location]);\r\n\r\n  const productList = products.map((product) => {\r\n    const src =\r\n      JSON.parse(product.img).length === 0 || !product.img\r\n        ? alt\r\n        : JSON.parse(product.img)[0];\r\n\r\n    return (\r\n      <Item key={product.id}>\r\n        <img\r\n          src={src}\r\n          alt={product.name}\r\n          onError={(e) => (e.target.src = alt)}\r\n          onClick={() => navigate(`/product/${product.id}`)}\r\n        />\r\n        <div className=\"name\">{product.name}</div>\r\n        <div className=\"price\">{Number(product.price).toLocaleString()}원</div>\r\n        <div>{product.address}</div>\r\n        <div className=\"info\">\r\n          관심{product.wishes} · 댓글{product.comments}\r\n        </div>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Main>\r\n      <Header>\r\n        {!location.state\r\n          ? \"전체 검색 결과입니다\"\r\n          : `\"${location.state}\" 검색 결과입니다`}\r\n      </Header>\r\n      <List>{productList}</List>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #eee;\r\n`;\r\n\r\nexport const Controls = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  :hover {\r\n    color: #3f51b5;\r\n  }\r\n`;\r\n\r\nexport const List = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-gap: 100px;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  @media screen and (max-width: 767px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  img {\r\n    width: 100%;\r\n    height: 300px;\r\n    border-radius: 10px;\r\n    object-fit: cover;\r\n    cursor: pointer;\r\n    :hover {\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n  .name {\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    padding: 10px 0;\r\n  }\r\n  .price {\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    color: #3f51b5;\r\n  }\r\n  .info {\r\n    color: gray;\r\n  }\r\n  .unanswered {\r\n    color: #3f51b5;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axiosInstance from \"../../axios\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { start, end } from \"../../features/loading\";\r\nimport { Main, Header, Controls, Text, List, Item } from \"./styles\";\r\n\r\nimport alt from \"../../image/alt.png\";\r\n\r\nconst Sale = () => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const loading = useSelector((state) => state.loading);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState(1);\r\n  const [state, setState] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProduct();\r\n  }, [page, state]);\r\n\r\n  const getProduct = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.get(\r\n        `/api/product/sale?page=${page}&state=${state}`,\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      );\r\n      setPages(Math.ceil(response.data.count / 6));\r\n      setCount(response.data.count);\r\n      setProducts(response.data.rows);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, [page, state]);\r\n\r\n  const productList = products.map((product) => {\r\n    const src =\r\n      JSON.parse(product.img).length === 0 || !product.img\r\n        ? alt\r\n        : JSON.parse(product.img)[0];\r\n\r\n    return (\r\n      <Item key={product.id}>\r\n        <img\r\n          src={src}\r\n          alt={product.name}\r\n          onError={(e) => (e.target.src = alt)}\r\n          onClick={() => navigate(`/product/${product.id}`)}\r\n        />\r\n        <div className=\"name\">{product.name}</div>\r\n        <div className=\"price\">{Number(product.price).toLocaleString()}원</div>\r\n        <div>{product.address}</div>\r\n        <div className=\"info\">\r\n          관심{product.wishes} · 댓글{product.comments}\r\n        </div>\r\n        {product.unanswered ? (\r\n          <div className=\"unanswered\">\r\n            미답변 댓글이 {product.unanswered}건 있습니다\r\n          </div>\r\n        ) : null}\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Main>\r\n      <Header>\r\n        {!loading.current &&\r\n          (state === 0\r\n            ? count === 0\r\n              ? `판매중인 상품이 없습니다`\r\n              : `${count}건의 판매중인 상품이 있습니다`\r\n            : count === 0\r\n            ? `판매완료된 상품이 없습니다`\r\n            : `${count}건의 판매완료된 상품이 있습니다`)}\r\n      </Header>\r\n      <Controls>\r\n        <div>\r\n          <ButtonGroup>\r\n            <Button\r\n              variant={!state ? \"contained\" : \"outlined\"}\r\n              size=\"large\"\r\n              onClick={() => {\r\n                setPage(1);\r\n                setState(0);\r\n              }}\r\n            >\r\n              판매 중\r\n            </Button>\r\n            <Button\r\n              variant={state ? \"contained\" : \"outlined\"}\r\n              size=\"large\"\r\n              onClick={() => {\r\n                setPage(1);\r\n                setState(1);\r\n              }}\r\n            >\r\n              판매 완료\r\n            </Button>\r\n          </ButtonGroup>\r\n        </div>\r\n        <Pagination page={page} count={pages} onChange={(e, v) => setPage(v)} />\r\n      </Controls>\r\n      {count === 0 && (\r\n        <Text onClick={() => navigate(\"/write\")}>상품 등록하러가기</Text>\r\n      )}\r\n      <List>{productList}</List>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Sale;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #eee;\r\n`;\r\n\r\nexport const Controls = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-gap: 100px;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  @media screen and (max-width: 767px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  img {\r\n    width: 100%;\r\n    height: 300px;\r\n    border-radius: 10px;\r\n    object-fit: cover;\r\n    cursor: pointer;\r\n    :hover {\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n  .name {\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    padding: 10px 0;\r\n  }\r\n  .price {\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    color: #3f51b5;\r\n  }\r\n  .info {\r\n    color: gray;\r\n  }\r\n  .buttons {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { start, end } from \"../../features/loading\";\r\nimport { Main, Header, Controls, List, Text, Item } from \"./styles\";\r\nimport alt from \"../../image/alt.png\";\r\n\r\nconst Purchase = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n  const loading = useSelector((state) => state.loading);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState(1);\r\n  const [page2, setPage2] = useState(1);\r\n  const [pages2, setPages2] = useState(1);\r\n  const [count, setCount] = useState(0);\r\n  const [products, setProducts] = useState([]);\r\n  const [uncertain, setUncertain] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProduct();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    getProduct2();\r\n  }, [page2]);\r\n\r\n  const getProduct = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.get(\r\n        `/api/product/purchase?state=2&page=${page}`,\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        setPages(Math.ceil(response.data.count / 6));\r\n        setCount(response.data.count);\r\n        setProducts(response.data.rows);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, [page]);\r\n\r\n  const getProduct2 = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.get(\r\n        `/api/product/uncertain?state=1&page=${page2}`,\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        setPages2(Math.ceil(response.data.count / 3));\r\n        setUncertain(response.data.rows);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, [page2]);\r\n\r\n  const putProduct = useCallback(async (id, boolean) => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.put(\r\n        \"/api/product/2\",\r\n        {\r\n          id,\r\n          boolean,\r\n        },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        getProduct();\r\n        getProduct2();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, []);\r\n\r\n  const productList = products.map((product) => {\r\n    const src =\r\n      JSON.parse(product.img).length === 0 || !product.img\r\n        ? alt\r\n        : JSON.parse(product.img)[0];\r\n\r\n    return (\r\n      <Item key={product.id}>\r\n        <img\r\n          src={src}\r\n          alt={product.name}\r\n          onError={(e) => (e.target.src = alt)}\r\n          onClick={() => navigate(`/product/${product.id}`)}\r\n        />\r\n        <div className=\"name\">{product.name}</div>\r\n        <div className=\"price\">{Number(product.price).toLocaleString()}원</div>\r\n        <div>{product.address}</div>\r\n        <div className=\"info\">\r\n          관심{product.wishes} · 댓글{product.comments}\r\n        </div>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  const uncertainList = uncertain.map((product) => {\r\n    const src =\r\n      JSON.parse(product.img).length === 0 || !product.img\r\n        ? alt\r\n        : JSON.parse(product.img)[0];\r\n\r\n    return (\r\n      <Item key={product.id}>\r\n        <img\r\n          src={src}\r\n          alt={product.name}\r\n          onError={(e) => (e.target.src = alt)}\r\n          onClick={() => navigate(`/product/${product.id}`)}\r\n        />\r\n        <div className=\"name\">{product.name}</div>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => putProduct(product.id, true)}\r\n          >\r\n            네 맞아요\r\n          </Button>\r\n          <Button variant=\"text\" onClick={() => putProduct(product.id, false)}>\r\n            아니요\r\n          </Button>\r\n        </div>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Main>\r\n      <Header>\r\n        {!loading.current &&\r\n          (count === 0\r\n            ? `아직 구매한 상품이 없습니다`\r\n            : `${count}건의 구매한 상품이 있습니다`)}\r\n      </Header>\r\n      <Controls>\r\n        <Pagination page={page} count={pages} onChange={(e, v) => setPage(v)} />\r\n      </Controls>\r\n      {count === 0 && <Text></Text>}\r\n      <List>{productList}</List>\r\n      <Header>구매한 상품이 맞나요?</Header>\r\n      <Controls>\r\n        <Pagination\r\n          page={page2}\r\n          count={pages2}\r\n          onChange={(e, v) => setPage2(v)}\r\n        />\r\n      </Controls>\r\n      <List>{uncertainList}</List>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Purchase;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #eee;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Controls = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-gap: 100px;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  @media screen and (max-width: 767px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  img {\r\n    width: 100%;\r\n    height: 300px;\r\n    border-radius: 10px;\r\n    object-fit: cover;\r\n    cursor: pointer;\r\n    :hover {\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n\r\n  .name {\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    padding: 10px 0;\r\n  }\r\n  .price {\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    color: #3f51b5;\r\n  }\r\n  .info {\r\n    color: gray;\r\n  }\r\n`;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { start, end } from \"../../features/loading\";\r\nimport alt from \"../../image/alt.png\";\r\nimport { Main, Header, Controls, List, Item } from \"./styles\";\r\n\r\nconst Wish = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const loading = useSelector((state) => state.loading);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState(1);\r\n  const [count, setCount] = useState(0);\r\n  const [wishes, setWishes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getWish();\r\n  }, [page]);\r\n\r\n  const getWish = useCallback(async () => {\r\n    try {\r\n      dispatch(start());\r\n      const response = await axiosInstance.get(`/api/wish?page=${page}`, {\r\n        headers: {\r\n          token: auth.token,\r\n        },\r\n      });\r\n      setPages(Math.ceil(response.data.count / 6));\r\n      setCount(response.data.count);\r\n      setWishes(response.data.rows);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(end());\r\n  }, [page]);\r\n\r\n  const list = wishes.map((wish) => {\r\n    const src =\r\n      JSON.parse(wish.product.img).length === 0 || !wish.product.img\r\n        ? alt\r\n        : JSON.parse(wish.product.img)[0];\r\n\r\n    return (\r\n      <Item key={wish.id}>\r\n        <Link to={`/product/${wish.product.id}`}>\r\n          <img\r\n            src={src}\r\n            alt={wish.name}\r\n            onError={(e) => (e.target.src = alt)}\r\n          />\r\n        </Link>\r\n        <div className=\"name\">{wish.product.name}</div>\r\n        <div className=\"price\">\r\n          {Number(wish.product.price).toLocaleString()}원\r\n        </div>\r\n        <div>{wish.product.address}</div>\r\n        <div className=\"info\">\r\n          관심{wish.product.wishes} · 댓글{wish.product.comments}\r\n        </div>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Main>\r\n      <Header>\r\n        {!loading.current &&\r\n          (count === 0\r\n            ? `관심목록에 추가한 상품이 없습니다`\r\n            : `${count}건의 관심상품이 있습니다`)}\r\n      </Header>\r\n      <Controls>\r\n        <Pagination count={pages} onChange={(e, v) => setPage(v)} />\r\n      </Controls>\r\n      {count === 0 && <div className=\"wish-text\"></div>}\r\n      <List>{list}</List>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Wish;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axiosInstance from \"../../axios\";\r\n\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nconst Users = () => {\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const [fetch, setFetch] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    setFetch(true);\r\n  }, []);\r\n\r\n  const getUsers = useCallback(async () => {\r\n    try {\r\n      const response = await axiosInstance.get(\"/api/user/admin\", {\r\n        headers: {\r\n          token: auth.token,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    fetch && (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>사용자 ID</TableCell>\r\n                <TableCell align=\"right\">별명</TableCell>\r\n                <TableCell align=\"right\">판매 중</TableCell>\r\n                <TableCell align=\"right\">판매 완료</TableCell>\r\n                <TableCell align=\"right\">구매</TableCell>\r\n                <TableCell align=\"right\">가입일</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {users.map((user) => (\r\n                <TableRow\r\n                  key={user.id}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {user.id}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{user.nickname}</TableCell>\r\n                  <TableCell align=\"right\">{user.sale}</TableCell>\r\n                  <TableCell align=\"right\">{user.sold}</TableCell>\r\n                  <TableCell align=\"right\">{user.purchase}</TableCell>\r\n                  <TableCell align=\"right\">{user.createdAt}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { HashRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"./features/auth\";\nimport \"./App.css\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Menu from \"./components/menu\";\nimport Main from \"./pages/main\";\nimport Product from \"./pages/product\";\nimport Signup from \"./pages/signup\";\nimport Login from \"./pages/login\";\nimport User from \"./pages/user\";\nimport Profile from \"./pages/profile\";\nimport Write from \"./pages/write\";\nimport Update from \"./pages/update\";\nimport Search from \"./pages/search\";\nimport Sale from \"./pages/sale\";\nimport Purchase from \"./pages/purchase\";\nimport Wish from \"./pages/wish\";\nimport Users from \"./pages/users\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  window.addEventListener(\"storage\", () => {\n    dispatch(logout());\n  });\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Menu />\n        <Header />\n        <div className=\"route\">\n          <Routes>\n            <Route index element={<Main />} />\n            <Route path=\"search\" element={<Search />} />\n            <Route path=\"product/:id\" element={<Product />} />\n            <Route path=\"user/:id\" element={<User />} />\n            <Route\n              path=\"profile\"\n              element={!auth.loggedIn ? <Navigate to=\"/\" /> : <Profile />}\n            />\n            <Route\n              path=\"signup\"\n              element={auth.loggedIn ? <Navigate to=\"/\" /> : <Signup />}\n            />\n            <Route\n              path=\"login\"\n              element={auth.loggedIn ? <Navigate to=\"/\" /> : <Login />}\n            />\n            <Route\n              path=\"write\"\n              element={!auth.loggedIn ? <Navigate to=\"/\" /> : <Write />}\n            />\n            <Route\n              path=\"update/:id\"\n              element={!auth.loggedIn ? <Navigate to=\"/\" /> : <Update />}\n            />\n            <Route\n              path=\"sale\"\n              element={!auth.loggedIn ? <Navigate to=\"/\" /> : <Sale />}\n            />\n            <Route\n              path=\"purchase\"\n              element={!auth.loggedIn ? <Navigate to=\"/\" /> : <Purchase />}\n            />\n            <Route\n              path=\"wish\"\n              element={!auth.loggedIn ? <Navigate to=\"/\" /> : <Wish />}\n            />\n            <Route\n              path=\"users\"\n              element={\n                !auth.loggedIn || auth.id !== \"admin\" ? (\n                  <Navigate to=\"/\" />\n                ) : (\n                  <Users />\n                )\n              }\n            />\n          </Routes>\n        </div>\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport authReducer from \"../features/auth\";\r\nimport menuReducer from \"../features/menu\";\r\nimport loadingReducer from \"../features/loading\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  menu: menuReducer,\r\n  loading: loadingReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"auth\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst persistor = persistStore(store);\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#3f51b5\",\n    },\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}